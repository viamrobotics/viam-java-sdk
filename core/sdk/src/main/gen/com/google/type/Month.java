// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/type/month.proto
// Protobuf Java Version: 4.27.2

package com.google.type;

/**
 * <pre>
 * Represents a month in the Gregorian calendar.
 * </pre>
 *
 * Protobuf enum {@code google.type.Month}
 */
public enum Month
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <pre>
   * The unspecified month.
   * </pre>
   *
   * <code>MONTH_UNSPECIFIED = 0;</code>
   */
  MONTH_UNSPECIFIED(0),
  /**
   * <pre>
   * The month of January.
   * </pre>
   *
   * <code>JANUARY = 1;</code>
   */
  JANUARY(1),
  /**
   * <pre>
   * The month of February.
   * </pre>
   *
   * <code>FEBRUARY = 2;</code>
   */
  FEBRUARY(2),
  /**
   * <pre>
   * The month of March.
   * </pre>
   *
   * <code>MARCH = 3;</code>
   */
  MARCH(3),
  /**
   * <pre>
   * The month of April.
   * </pre>
   *
   * <code>APRIL = 4;</code>
   */
  APRIL(4),
  /**
   * <pre>
   * The month of May.
   * </pre>
   *
   * <code>MAY = 5;</code>
   */
  MAY(5),
  /**
   * <pre>
   * The month of June.
   * </pre>
   *
   * <code>JUNE = 6;</code>
   */
  JUNE(6),
  /**
   * <pre>
   * The month of July.
   * </pre>
   *
   * <code>JULY = 7;</code>
   */
  JULY(7),
  /**
   * <pre>
   * The month of August.
   * </pre>
   *
   * <code>AUGUST = 8;</code>
   */
  AUGUST(8),
  /**
   * <pre>
   * The month of September.
   * </pre>
   *
   * <code>SEPTEMBER = 9;</code>
   */
  SEPTEMBER(9),
  /**
   * <pre>
   * The month of October.
   * </pre>
   *
   * <code>OCTOBER = 10;</code>
   */
  OCTOBER(10),
  /**
   * <pre>
   * The month of November.
   * </pre>
   *
   * <code>NOVEMBER = 11;</code>
   */
  NOVEMBER(11),
  /**
   * <pre>
   * The month of December.
   * </pre>
   *
   * <code>DECEMBER = 12;</code>
   */
  DECEMBER(12),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The unspecified month.
   * </pre>
   *
   * <code>MONTH_UNSPECIFIED = 0;</code>
   */
  public static final int MONTH_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * The month of January.
   * </pre>
   *
   * <code>JANUARY = 1;</code>
   */
  public static final int JANUARY_VALUE = 1;
  /**
   * <pre>
   * The month of February.
   * </pre>
   *
   * <code>FEBRUARY = 2;</code>
   */
  public static final int FEBRUARY_VALUE = 2;
  /**
   * <pre>
   * The month of March.
   * </pre>
   *
   * <code>MARCH = 3;</code>
   */
  public static final int MARCH_VALUE = 3;
  /**
   * <pre>
   * The month of April.
   * </pre>
   *
   * <code>APRIL = 4;</code>
   */
  public static final int APRIL_VALUE = 4;
  /**
   * <pre>
   * The month of May.
   * </pre>
   *
   * <code>MAY = 5;</code>
   */
  public static final int MAY_VALUE = 5;
  /**
   * <pre>
   * The month of June.
   * </pre>
   *
   * <code>JUNE = 6;</code>
   */
  public static final int JUNE_VALUE = 6;
  /**
   * <pre>
   * The month of July.
   * </pre>
   *
   * <code>JULY = 7;</code>
   */
  public static final int JULY_VALUE = 7;
  /**
   * <pre>
   * The month of August.
   * </pre>
   *
   * <code>AUGUST = 8;</code>
   */
  public static final int AUGUST_VALUE = 8;
  /**
   * <pre>
   * The month of September.
   * </pre>
   *
   * <code>SEPTEMBER = 9;</code>
   */
  public static final int SEPTEMBER_VALUE = 9;
  /**
   * <pre>
   * The month of October.
   * </pre>
   *
   * <code>OCTOBER = 10;</code>
   */
  public static final int OCTOBER_VALUE = 10;
  /**
   * <pre>
   * The month of November.
   * </pre>
   *
   * <code>NOVEMBER = 11;</code>
   */
  public static final int NOVEMBER_VALUE = 11;
  /**
   * <pre>
   * The month of December.
   * </pre>
   *
   * <code>DECEMBER = 12;</code>
   */
  public static final int DECEMBER_VALUE = 12;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Month valueOf(int value) {
    return forNumber(value);
  }

  public static Month forNumber(int value) {
    switch (value) {
      case 0: return MONTH_UNSPECIFIED;
      case 1: return JANUARY;
      case 2: return FEBRUARY;
      case 3: return MARCH;
      case 4: return APRIL;
      case 5: return MAY;
      case 6: return JUNE;
      case 7: return JULY;
      case 8: return AUGUST;
      case 9: return SEPTEMBER;
      case 10: return OCTOBER;
      case 11: return NOVEMBER;
      case 12: return DECEMBER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Month>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Month> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Month>() {
          @java.lang.Override
          public Month findValueByNumber(int number) {
            return Month.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return MonthVerifier.INSTANCE;
  }

  private static final class MonthVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new MonthVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return Month.forNumber(number) != null;
          }
        };

  private final int value;

  private Month(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.type.Month)
}

