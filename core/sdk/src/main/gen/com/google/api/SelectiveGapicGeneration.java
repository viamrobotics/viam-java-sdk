// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/api/client.proto
// Protobuf Java Version: 4.27.2

package com.google.api;

/**
 * <pre>
 * This message is used to configure the generation of a subset of the RPCs in
 * a service for client libraries.
 * </pre>
 *
 * Protobuf type {@code google.api.SelectiveGapicGeneration}
 */
public  final class SelectiveGapicGeneration extends
    com.google.protobuf.GeneratedMessageLite<
        SelectiveGapicGeneration, SelectiveGapicGeneration.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.SelectiveGapicGeneration)
    SelectiveGapicGenerationOrBuilder {
  private SelectiveGapicGeneration() {
    methods_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  public static final int METHODS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> methods_;
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @return A list containing the methods.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getMethodsList() {
    return methods_;
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @return The count of methods.
   */
  @java.lang.Override
  public int getMethodsCount() {
    return methods_.size();
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param index The index of the element to return.
   * @return The methods at the given index.
   */
  @java.lang.Override
  public java.lang.String getMethods(int index) {
    return methods_.get(index);
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the methods at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMethodsBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        methods_.get(index));
  }
  private void ensureMethodsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        methods_;  if (!tmp.isModifiable()) {
      methods_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param index The index to set the value at.
   * @param value The methods to set.
   */
  private void setMethods(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureMethodsIsMutable();
    methods_.set(index, value);
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param value The methods to add.
   */
  private void addMethods(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureMethodsIsMutable();
    methods_.add(value);
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param values The methods to add.
   */
  private void addAllMethods(
      java.lang.Iterable<java.lang.String> values) {
    ensureMethodsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, methods_);
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   */
  private void clearMethods() {
    methods_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * An allowlist of the fully qualified names of RPCs that should be included
   * on public client surfaces.
   * </pre>
   *
   * <code>repeated string methods = 1 [json_name = "methods"];</code>
   * @param value The bytes of the methods to add.
   */
  private void addMethodsBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureMethodsIsMutable();
    methods_.add(value.toStringUtf8());
  }

  public static com.google.api.SelectiveGapicGeneration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.SelectiveGapicGeneration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.SelectiveGapicGeneration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.SelectiveGapicGeneration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.api.SelectiveGapicGeneration prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * This message is used to configure the generation of a subset of the RPCs in
   * a service for client libraries.
   * </pre>
   *
   * Protobuf type {@code google.api.SelectiveGapicGeneration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.SelectiveGapicGeneration, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.SelectiveGapicGeneration)
      com.google.api.SelectiveGapicGenerationOrBuilder {
    // Construct using com.google.api.SelectiveGapicGeneration.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @return A list containing the methods.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getMethodsList() {
      return java.util.Collections.unmodifiableList(
          instance.getMethodsList());
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @return The count of methods.
     */
    @java.lang.Override
    public int getMethodsCount() {
      return instance.getMethodsCount();
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param index The index of the element to return.
     * @return The methods at the given index.
     */
    @java.lang.Override
    public java.lang.String getMethods(int index) {
      return instance.getMethods(index);
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the methods at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodsBytes(int index) {
      return instance.getMethodsBytes(index);
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param index The index to set the value at.
     * @param value The methods to set.
     * @return This builder for chaining.
     */
    public Builder setMethods(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setMethods(index, value);
      return this;
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param value The methods to add.
     * @return This builder for chaining.
     */
    public Builder addMethods(
        java.lang.String value) {
      copyOnWrite();
      instance.addMethods(value);
      return this;
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param values The methods to add.
     * @return This builder for chaining.
     */
    public Builder addAllMethods(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllMethods(values);
      return this;
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMethods() {
      copyOnWrite();
      instance.clearMethods();
      return this;
    }
    /**
     * <pre>
     * An allowlist of the fully qualified names of RPCs that should be included
     * on public client surfaces.
     * </pre>
     *
     * <code>repeated string methods = 1 [json_name = "methods"];</code>
     * @param value The bytes of the methods to add.
     * @return This builder for chaining.
     */
    public Builder addMethodsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addMethodsBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.SelectiveGapicGeneration)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.SelectiveGapicGeneration();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "methods_",
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u021a";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.api.SelectiveGapicGeneration> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.api.SelectiveGapicGeneration.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.api.SelectiveGapicGeneration>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.SelectiveGapicGeneration)
  private static final com.google.api.SelectiveGapicGeneration DEFAULT_INSTANCE;
  static {
    SelectiveGapicGeneration defaultInstance = new SelectiveGapicGeneration();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SelectiveGapicGeneration.class, defaultInstance);
  }

  public static com.google.api.SelectiveGapicGeneration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SelectiveGapicGeneration> PARSER;

  public static com.google.protobuf.Parser<SelectiveGapicGeneration> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

