// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/api/client.proto
// Protobuf Java Version: 4.28.3

package com.google.api;

/**
 * <pre>
 * Settings for Go client libraries.
 * </pre>
 *
 * Protobuf type {@code google.api.GoSettings}
 */
public  final class GoSettings extends
    com.google.protobuf.GeneratedMessageLite<
        GoSettings, GoSettings.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.GoSettings)
    GoSettingsOrBuilder {
  private GoSettings() {
  }
  private int bitField0_;
  public static final int COMMON_FIELD_NUMBER = 1;
  private com.google.api.CommonLanguageSettings common_;
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
   */
  @java.lang.Override
  public boolean hasCommon() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
   */
  @java.lang.Override
  public com.google.api.CommonLanguageSettings getCommon() {
    return common_ == null ? com.google.api.CommonLanguageSettings.getDefaultInstance() : common_;
  }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
   */
  private void setCommon(com.google.api.CommonLanguageSettings value) {
    value.getClass();
  common_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCommon(com.google.api.CommonLanguageSettings value) {
    value.getClass();
  if (common_ != null &&
        common_ != com.google.api.CommonLanguageSettings.getDefaultInstance()) {
      common_ =
        com.google.api.CommonLanguageSettings.newBuilder(common_).mergeFrom(value).buildPartial();
    } else {
      common_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
   */
  private void clearCommon() {  common_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int RENAMED_SERVICES_FIELD_NUMBER = 2;
  private static final class RenamedServicesDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> renamedServices_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetRenamedServices() {
    return renamedServices_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableRenamedServices() {
    if (!renamedServices_.isMutable()) {
      renamedServices_ = renamedServices_.mutableCopy();
    }
    return renamedServices_;
  }
  @java.lang.Override

  public int getRenamedServicesCount() {
    return internalGetRenamedServices().size();
  }
  /**
   * <pre>
   * Map of service names to renamed services. Keys are the package relative
   * service names and values are the name to be used for the service client
   * and call options.
   *
   * publishing:
   * go_settings:
   * renamed_services:
   * Publisher: TopicAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
   */
  @java.lang.Override

  public boolean containsRenamedServices(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetRenamedServices().containsKey(key);
  }
  /**
   * Use {@link #getRenamedServicesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getRenamedServices() {
    return getRenamedServicesMap();
  }
  /**
   * <pre>
   * Map of service names to renamed services. Keys are the package relative
   * service names and values are the name to be used for the service client
   * and call options.
   *
   * publishing:
   * go_settings:
   * renamed_services:
   * Publisher: TopicAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getRenamedServicesMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetRenamedServices());
  }
  /**
   * <pre>
   * Map of service names to renamed services. Keys are the package relative
   * service names and values are the name to be used for the service client
   * and call options.
   *
   * publishing:
   * go_settings:
   * renamed_services:
   * Publisher: TopicAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
   */
  @java.lang.Override

  public /* nullable */
java.lang.String getRenamedServicesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetRenamedServices();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of service names to renamed services. Keys are the package relative
   * service names and values are the name to be used for the service client
   * and call options.
   *
   * publishing:
   * go_settings:
   * renamed_services:
   * Publisher: TopicAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
   */
  @java.lang.Override

  public java.lang.String getRenamedServicesOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetRenamedServices();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Map of service names to renamed services. Keys are the package relative
   * service names and values are the name to be used for the service client
   * and call options.
   *
   * publishing:
   * go_settings:
   * renamed_services:
   * Publisher: TopicAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableRenamedServicesMap() {
    return internalGetMutableRenamedServices();
  }

  public static com.google.api.GoSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.GoSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.GoSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.GoSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.GoSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.GoSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.GoSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.GoSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.GoSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.GoSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.GoSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.GoSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.api.GoSettings prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Settings for Go client libraries.
   * </pre>
   *
   * Protobuf type {@code google.api.GoSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.GoSettings, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.GoSettings)
      com.google.api.GoSettingsOrBuilder {
    // Construct using com.google.api.GoSettings.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    @java.lang.Override
    public boolean hasCommon() {
      return instance.hasCommon();
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    @java.lang.Override
    public com.google.api.CommonLanguageSettings getCommon() {
      return instance.getCommon();
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    public Builder setCommon(com.google.api.CommonLanguageSettings value) {
      copyOnWrite();
      instance.setCommon(value);
      return this;
      }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    public Builder setCommon(
        com.google.api.CommonLanguageSettings.Builder builderForValue) {
      copyOnWrite();
      instance.setCommon(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    public Builder mergeCommon(com.google.api.CommonLanguageSettings value) {
      copyOnWrite();
      instance.mergeCommon(value);
      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 1 [json_name = "common"];</code>
     */
    public Builder clearCommon() {  copyOnWrite();
      instance.clearCommon();
      return this;
    }

    @java.lang.Override

    public int getRenamedServicesCount() {
      return instance.getRenamedServicesMap().size();
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    @java.lang.Override

    public boolean containsRenamedServices(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getRenamedServicesMap().containsKey(key);
    }

    public Builder clearRenamedServices() {
      copyOnWrite();
      instance.getMutableRenamedServicesMap().clear();
      return this;
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */

    public Builder removeRenamedServices(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableRenamedServicesMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getRenamedServicesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getRenamedServices() {
      return getRenamedServicesMap();
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getRenamedServicesMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getRenamedServicesMap());
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    @java.lang.Override

    public /* nullable */
java.lang.String getRenamedServicesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getRenamedServicesMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    @java.lang.Override

    public java.lang.String getRenamedServicesOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getRenamedServicesMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    public Builder putRenamedServices(
        java.lang.String key,
        java.lang.String value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableRenamedServicesMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Map of service names to renamed services. Keys are the package relative
     * service names and values are the name to be used for the service client
     * and call options.
     *
     * publishing:
     * go_settings:
     * renamed_services:
     * Publisher: TopicAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; renamed_services = 2 [json_name = "renamedServices"];</code>
     */
    public Builder putAllRenamedServices(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableRenamedServicesMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.GoSettings)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.GoSettings();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "common_",
            "renamedServices_",
            RenamedServicesDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0001\u0000\u0000\u0001\u1009\u0000\u0002" +
              "2";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.api.GoSettings> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.api.GoSettings.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.api.GoSettings>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.GoSettings)
  private static final com.google.api.GoSettings DEFAULT_INSTANCE;
  static {
    GoSettings defaultInstance = new GoSettings();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      GoSettings.class, defaultInstance);
  }

  public static com.google.api.GoSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GoSettings> PARSER;

  public static com.google.protobuf.Parser<GoSettings> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

