// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/api/expr/v1alpha1/checked.proto
// Protobuf Java Version: 4.27.2

package com.google.api.expr.v1alpha1;

/**
 * <pre>
 * Describes a resolved reference to a declaration.
 * </pre>
 *
 * Protobuf type {@code google.api.expr.v1alpha1.Reference}
 */
public  final class Reference extends
    com.google.protobuf.GeneratedMessageLite<
        Reference, Reference.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.expr.v1alpha1.Reference)
    ReferenceOrBuilder {
  private Reference() {
    name_ = "";
    overloadId_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * The fully qualified name of the declaration.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The fully qualified name of the declaration.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The fully qualified name of the declaration.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * The fully qualified name of the declaration.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The fully qualified name of the declaration.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();

  }

  public static final int OVERLOAD_ID_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> overloadId_;
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @return A list containing the overloadId.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getOverloadIdList() {
    return overloadId_;
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @return The count of overloadId.
   */
  @java.lang.Override
  public int getOverloadIdCount() {
    return overloadId_.size();
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param index The index of the element to return.
   * @return The overloadId at the given index.
   */
  @java.lang.Override
  public java.lang.String getOverloadId(int index) {
    return overloadId_.get(index);
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the overloadId at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOverloadIdBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        overloadId_.get(index));
  }
  private void ensureOverloadIdIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        overloadId_;  if (!tmp.isModifiable()) {
      overloadId_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param index The index to set the value at.
   * @param value The overloadId to set.
   */
  private void setOverloadId(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureOverloadIdIsMutable();
    overloadId_.set(index, value);
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param value The overloadId to add.
   */
  private void addOverloadId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureOverloadIdIsMutable();
    overloadId_.add(value);
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param values The overloadId to add.
   */
  private void addAllOverloadId(
      java.lang.Iterable<java.lang.String> values) {
    ensureOverloadIdIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, overloadId_);
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   */
  private void clearOverloadId() {
    overloadId_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * For references to functions, this is a list of `Overload.overload_id`
   * values which match according to typing rules.
   *
   * If the list has more than one element, overload resolution among the
   * presented candidates must happen at runtime because of dynamic types. The
   * type checker attempts to narrow down this list as much as possible.
   *
   * Empty if this is not a reference to a
   * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
   * </pre>
   *
   * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
   * @param value The bytes of the overloadId to add.
   */
  private void addOverloadIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureOverloadIdIsMutable();
    overloadId_.add(value.toStringUtf8());
  }

  public static final int VALUE_FIELD_NUMBER = 4;
  private com.google.api.expr.v1alpha1.Constant value_;
  /**
   * <pre>
   * For references to constants, this may contain the value of the
   * constant if known at compile time.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
   */
  @java.lang.Override
  public boolean hasValue() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * For references to constants, this may contain the value of the
   * constant if known at compile time.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
   */
  @java.lang.Override
  public com.google.api.expr.v1alpha1.Constant getValue() {
    return value_ == null ? com.google.api.expr.v1alpha1.Constant.getDefaultInstance() : value_;
  }
  /**
   * <pre>
   * For references to constants, this may contain the value of the
   * constant if known at compile time.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
   */
  private void setValue(com.google.api.expr.v1alpha1.Constant value) {
    value.getClass();
  value_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * For references to constants, this may contain the value of the
   * constant if known at compile time.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeValue(com.google.api.expr.v1alpha1.Constant value) {
    value.getClass();
  if (value_ != null &&
        value_ != com.google.api.expr.v1alpha1.Constant.getDefaultInstance()) {
      value_ =
        com.google.api.expr.v1alpha1.Constant.newBuilder(value_).mergeFrom(value).buildPartial();
    } else {
      value_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * For references to constants, this may contain the value of the
   * constant if known at compile time.
   * </pre>
   *
   * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
   */
  private void clearValue() {  value_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.expr.v1alpha1.Reference parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.expr.v1alpha1.Reference parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.expr.v1alpha1.Reference parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.api.expr.v1alpha1.Reference prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Describes a resolved reference to a declaration.
   * </pre>
   *
   * Protobuf type {@code google.api.expr.v1alpha1.Reference}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.expr.v1alpha1.Reference, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.expr.v1alpha1.Reference)
      com.google.api.expr.v1alpha1.ReferenceOrBuilder {
    // Construct using com.google.api.expr.v1alpha1.Reference.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The fully qualified name of the declaration.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The fully qualified name of the declaration.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The fully qualified name of the declaration.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The fully qualified name of the declaration.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The fully qualified name of the declaration.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @return A list containing the overloadId.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getOverloadIdList() {
      return java.util.Collections.unmodifiableList(
          instance.getOverloadIdList());
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @return The count of overloadId.
     */
    @java.lang.Override
    public int getOverloadIdCount() {
      return instance.getOverloadIdCount();
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param index The index of the element to return.
     * @return The overloadId at the given index.
     */
    @java.lang.Override
    public java.lang.String getOverloadId(int index) {
      return instance.getOverloadId(index);
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the overloadId at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOverloadIdBytes(int index) {
      return instance.getOverloadIdBytes(index);
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param index The index to set the value at.
     * @param value The overloadId to set.
     * @return This builder for chaining.
     */
    public Builder setOverloadId(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setOverloadId(index, value);
      return this;
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param value The overloadId to add.
     * @return This builder for chaining.
     */
    public Builder addOverloadId(
        java.lang.String value) {
      copyOnWrite();
      instance.addOverloadId(value);
      return this;
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param values The overloadId to add.
     * @return This builder for chaining.
     */
    public Builder addAllOverloadId(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllOverloadId(values);
      return this;
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOverloadId() {
      copyOnWrite();
      instance.clearOverloadId();
      return this;
    }
    /**
     * <pre>
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     *
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     *
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * </pre>
     *
     * <code>repeated string overload_id = 3 [json_name = "overloadId"];</code>
     * @param value The bytes of the overloadId to add.
     * @return This builder for chaining.
     */
    public Builder addOverloadIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addOverloadIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    @java.lang.Override
    public boolean hasValue() {
      return instance.hasValue();
    }
    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    @java.lang.Override
    public com.google.api.expr.v1alpha1.Constant getValue() {
      return instance.getValue();
    }
    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    public Builder setValue(com.google.api.expr.v1alpha1.Constant value) {
      copyOnWrite();
      instance.setValue(value);
      return this;
      }
    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    public Builder setValue(
        com.google.api.expr.v1alpha1.Constant.Builder builderForValue) {
      copyOnWrite();
      instance.setValue(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    public Builder mergeValue(com.google.api.expr.v1alpha1.Constant value) {
      copyOnWrite();
      instance.mergeValue(value);
      return this;
    }
    /**
     * <pre>
     * For references to constants, this may contain the value of the
     * constant if known at compile time.
     * </pre>
     *
     * <code>.google.api.expr.v1alpha1.Constant value = 4 [json_name = "value"];</code>
     */
    public Builder clearValue() {  copyOnWrite();
      instance.clearValue();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.expr.v1alpha1.Reference)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.expr.v1alpha1.Reference();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "name_",
            "overloadId_",
            "value_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0001\u0001\u0004\u0003\u0000\u0001\u0000\u0001\u0208\u0003\u021a" +
              "\u0004\u1009\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.api.expr.v1alpha1.Reference> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.api.expr.v1alpha1.Reference.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.api.expr.v1alpha1.Reference>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.Reference)
  private static final com.google.api.expr.v1alpha1.Reference DEFAULT_INSTANCE;
  static {
    Reference defaultInstance = new Reference();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Reference.class, defaultInstance);
  }

  public static com.google.api.expr.v1alpha1.Reference getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Reference> PARSER;

  public static com.google.protobuf.Parser<Reference> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

