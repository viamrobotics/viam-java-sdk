// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/error_details.proto

// Protobuf Java Version: 3.25.2
package com.google.rpc;

/**
 * <pre>
 * Contains metadata about the request that clients can attach when filing a bug
 * or providing other forms of feedback.
 * </pre>
 *
 * Protobuf type {@code google.rpc.RequestInfo}
 */
public  final class RequestInfo extends
    com.google.protobuf.GeneratedMessageLite<
        RequestInfo, RequestInfo.Builder> implements
    // @@protoc_insertion_point(message_implements:google.rpc.RequestInfo)
    RequestInfoOrBuilder {
  private RequestInfo() {
    requestId_ = "";
    servingData_ = "";
  }
  public static final int REQUEST_ID_FIELD_NUMBER = 1;
  private java.lang.String requestId_;
  /**
   * <pre>
   * An opaque string that should only be interpreted by the service generating
   * it. For example, it can be used to identify requests in the service's logs.
   * </pre>
   *
   * <code>string request_id = 1 [json_name = "requestId"];</code>
   * @return The requestId.
   */
  @java.lang.Override
  public java.lang.String getRequestId() {
    return requestId_;
  }
  /**
   * <pre>
   * An opaque string that should only be interpreted by the service generating
   * it. For example, it can be used to identify requests in the service's logs.
   * </pre>
   *
   * <code>string request_id = 1 [json_name = "requestId"];</code>
   * @return The bytes for requestId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRequestIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(requestId_);
  }
  /**
   * <pre>
   * An opaque string that should only be interpreted by the service generating
   * it. For example, it can be used to identify requests in the service's logs.
   * </pre>
   *
   * <code>string request_id = 1 [json_name = "requestId"];</code>
   * @param value The requestId to set.
   */
  private void setRequestId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    requestId_ = value;
  }
  /**
   * <pre>
   * An opaque string that should only be interpreted by the service generating
   * it. For example, it can be used to identify requests in the service's logs.
   * </pre>
   *
   * <code>string request_id = 1 [json_name = "requestId"];</code>
   */
  private void clearRequestId() {

    requestId_ = getDefaultInstance().getRequestId();
  }
  /**
   * <pre>
   * An opaque string that should only be interpreted by the service generating
   * it. For example, it can be used to identify requests in the service's logs.
   * </pre>
   *
   * <code>string request_id = 1 [json_name = "requestId"];</code>
   * @param value The bytes for requestId to set.
   */
  private void setRequestIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    requestId_ = value.toStringUtf8();

  }

  public static final int SERVING_DATA_FIELD_NUMBER = 2;
  private java.lang.String servingData_;
  /**
   * <pre>
   * Any data that was used to serve this request. For example, an encrypted
   * stack trace that can be sent back to the service provider for debugging.
   * </pre>
   *
   * <code>string serving_data = 2 [json_name = "servingData"];</code>
   * @return The servingData.
   */
  @java.lang.Override
  public java.lang.String getServingData() {
    return servingData_;
  }
  /**
   * <pre>
   * Any data that was used to serve this request. For example, an encrypted
   * stack trace that can be sent back to the service provider for debugging.
   * </pre>
   *
   * <code>string serving_data = 2 [json_name = "servingData"];</code>
   * @return The bytes for servingData.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServingDataBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(servingData_);
  }
  /**
   * <pre>
   * Any data that was used to serve this request. For example, an encrypted
   * stack trace that can be sent back to the service provider for debugging.
   * </pre>
   *
   * <code>string serving_data = 2 [json_name = "servingData"];</code>
   * @param value The servingData to set.
   */
  private void setServingData(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    servingData_ = value;
  }
  /**
   * <pre>
   * Any data that was used to serve this request. For example, an encrypted
   * stack trace that can be sent back to the service provider for debugging.
   * </pre>
   *
   * <code>string serving_data = 2 [json_name = "servingData"];</code>
   */
  private void clearServingData() {

    servingData_ = getDefaultInstance().getServingData();
  }
  /**
   * <pre>
   * Any data that was used to serve this request. For example, an encrypted
   * stack trace that can be sent back to the service provider for debugging.
   * </pre>
   *
   * <code>string serving_data = 2 [json_name = "servingData"];</code>
   * @param value The bytes for servingData to set.
   */
  private void setServingDataBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    servingData_ = value.toStringUtf8();

  }

  public static com.google.rpc.RequestInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.rpc.RequestInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.rpc.RequestInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.rpc.RequestInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.rpc.RequestInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.rpc.RequestInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.rpc.RequestInfo prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Contains metadata about the request that clients can attach when filing a bug
   * or providing other forms of feedback.
   * </pre>
   *
   * Protobuf type {@code google.rpc.RequestInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.rpc.RequestInfo, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.rpc.RequestInfo)
      com.google.rpc.RequestInfoOrBuilder {
    // Construct using com.google.rpc.RequestInfo.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * An opaque string that should only be interpreted by the service generating
     * it. For example, it can be used to identify requests in the service's logs.
     * </pre>
     *
     * <code>string request_id = 1 [json_name = "requestId"];</code>
     * @return The requestId.
     */
    @java.lang.Override
    public java.lang.String getRequestId() {
      return instance.getRequestId();
    }
    /**
     * <pre>
     * An opaque string that should only be interpreted by the service generating
     * it. For example, it can be used to identify requests in the service's logs.
     * </pre>
     *
     * <code>string request_id = 1 [json_name = "requestId"];</code>
     * @return The bytes for requestId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRequestIdBytes() {
      return instance.getRequestIdBytes();
    }
    /**
     * <pre>
     * An opaque string that should only be interpreted by the service generating
     * it. For example, it can be used to identify requests in the service's logs.
     * </pre>
     *
     * <code>string request_id = 1 [json_name = "requestId"];</code>
     * @param value The requestId to set.
     * @return This builder for chaining.
     */
    public Builder setRequestId(
        java.lang.String value) {
      copyOnWrite();
      instance.setRequestId(value);
      return this;
    }
    /**
     * <pre>
     * An opaque string that should only be interpreted by the service generating
     * it. For example, it can be used to identify requests in the service's logs.
     * </pre>
     *
     * <code>string request_id = 1 [json_name = "requestId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestId() {
      copyOnWrite();
      instance.clearRequestId();
      return this;
    }
    /**
     * <pre>
     * An opaque string that should only be interpreted by the service generating
     * it. For example, it can be used to identify requests in the service's logs.
     * </pre>
     *
     * <code>string request_id = 1 [json_name = "requestId"];</code>
     * @param value The bytes for requestId to set.
     * @return This builder for chaining.
     */
    public Builder setRequestIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setRequestIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Any data that was used to serve this request. For example, an encrypted
     * stack trace that can be sent back to the service provider for debugging.
     * </pre>
     *
     * <code>string serving_data = 2 [json_name = "servingData"];</code>
     * @return The servingData.
     */
    @java.lang.Override
    public java.lang.String getServingData() {
      return instance.getServingData();
    }
    /**
     * <pre>
     * Any data that was used to serve this request. For example, an encrypted
     * stack trace that can be sent back to the service provider for debugging.
     * </pre>
     *
     * <code>string serving_data = 2 [json_name = "servingData"];</code>
     * @return The bytes for servingData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServingDataBytes() {
      return instance.getServingDataBytes();
    }
    /**
     * <pre>
     * Any data that was used to serve this request. For example, an encrypted
     * stack trace that can be sent back to the service provider for debugging.
     * </pre>
     *
     * <code>string serving_data = 2 [json_name = "servingData"];</code>
     * @param value The servingData to set.
     * @return This builder for chaining.
     */
    public Builder setServingData(
        java.lang.String value) {
      copyOnWrite();
      instance.setServingData(value);
      return this;
    }
    /**
     * <pre>
     * Any data that was used to serve this request. For example, an encrypted
     * stack trace that can be sent back to the service provider for debugging.
     * </pre>
     *
     * <code>string serving_data = 2 [json_name = "servingData"];</code>
     * @return This builder for chaining.
     */
    public Builder clearServingData() {
      copyOnWrite();
      instance.clearServingData();
      return this;
    }
    /**
     * <pre>
     * Any data that was used to serve this request. For example, an encrypted
     * stack trace that can be sent back to the service provider for debugging.
     * </pre>
     *
     * <code>string serving_data = 2 [json_name = "servingData"];</code>
     * @param value The bytes for servingData to set.
     * @return This builder for chaining.
     */
    public Builder setServingDataBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServingDataBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.rpc.RequestInfo)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.rpc.RequestInfo();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "requestId_",
            "servingData_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.rpc.RequestInfo> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.rpc.RequestInfo.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.rpc.RequestInfo>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.rpc.RequestInfo)
  private static final com.google.rpc.RequestInfo DEFAULT_INSTANCE;
  static {
    RequestInfo defaultInstance = new RequestInfo();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RequestInfo.class, defaultInstance);
  }

  public static com.google.rpc.RequestInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RequestInfo> PARSER;

  public static com.google.protobuf.Parser<RequestInfo> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

