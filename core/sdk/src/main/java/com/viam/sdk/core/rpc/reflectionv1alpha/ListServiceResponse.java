// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/reflection/v1alpha/reflection.proto

// Protobuf Java Version: 3.25.2
package com.viam.sdk.core.rpc.reflectionv1alpha;

/**
 * <pre>
 * A list of ServiceResponse sent by the server answering list_services request.
 * </pre>
 * <p>
 * Protobuf type {@code grpc.reflection.v1alpha.ListServiceResponse}
 */
public final class ListServiceResponse extends
    com.google.protobuf.GeneratedMessageLite<
        ListServiceResponse, ListServiceResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.reflection.v1alpha.ListServiceResponse)
    ListServiceResponseOrBuilder {

  private ListServiceResponse() {
    service_ = emptyProtobufList();
  }

  public static final int SERVICE_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<ServiceResponse> service_;

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  @Override
  public java.util.List<ServiceResponse> getServiceList() {
    return service_;
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  public java.util.List<? extends ServiceResponseOrBuilder>
  getServiceOrBuilderList() {
    return service_;
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  @Override
  public int getServiceCount() {
    return service_.size();
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  @Override
  public ServiceResponse getService(int index) {
    return service_.get(index);
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  public ServiceResponseOrBuilder getServiceOrBuilder(
      int index) {
    return service_.get(index);
  }

  private void ensureServiceIsMutable() {
    com.google.protobuf.Internal.ProtobufList<ServiceResponse> tmp = service_;
    if (!tmp.isModifiable()) {
      service_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void setService(
      int index, ServiceResponse value) {
    value.getClass();
    ensureServiceIsMutable();
    service_.set(index, value);
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void addService(ServiceResponse value) {
    value.getClass();
    ensureServiceIsMutable();
    service_.add(value);
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void addService(
      int index, ServiceResponse value) {
    value.getClass();
    ensureServiceIsMutable();
    service_.add(index, value);
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void addAllService(
      Iterable<? extends ServiceResponse> values) {
    ensureServiceIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, service_);
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void clearService() {
    service_ = emptyProtobufList();
  }

  /**
   * <pre>
   * The information of each service may be expanded in the future, so we use
   * ServiceResponse message to encapsulate it.
   * </pre>
   *
   * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
   * "service"];</code>
   */
  private void removeService(int index) {
    ensureServiceIsMutable();
    service_.remove(index);
  }

  public static ListServiceResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ListServiceResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ListServiceResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ListServiceResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ListServiceResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ListServiceResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ListServiceResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }

  public static ListServiceResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static ListServiceResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static ListServiceResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static ListServiceResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }

  public static ListServiceResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(ListServiceResponse prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A list of ServiceResponse sent by the server answering list_services request.
   * </pre>
   * <p>
   * Protobuf type {@code grpc.reflection.v1alpha.ListServiceResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
          ListServiceResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.reflection.v1alpha.ListServiceResponse)
      ListServiceResponseOrBuilder {

    // Construct using io.grpc.reflection.v1alpha.ListServiceResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    @Override
    public java.util.List<ServiceResponse> getServiceList() {
      return java.util.Collections.unmodifiableList(
          instance.getServiceList());
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    @Override
    public int getServiceCount() {
      return instance.getServiceCount();
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    @Override
    public ServiceResponse getService(int index) {
      return instance.getService(index);
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder setService(
        int index, ServiceResponse value) {
      copyOnWrite();
      instance.setService(index, value);
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder setService(
        int index, ServiceResponse.Builder builderForValue) {
      copyOnWrite();
      instance.setService(index,
          builderForValue.build());
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder addService(ServiceResponse value) {
      copyOnWrite();
      instance.addService(value);
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder addService(
        int index, ServiceResponse value) {
      copyOnWrite();
      instance.addService(index, value);
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder addService(
        ServiceResponse.Builder builderForValue) {
      copyOnWrite();
      instance.addService(builderForValue.build());
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder addService(
        int index, ServiceResponse.Builder builderForValue) {
      copyOnWrite();
      instance.addService(index,
          builderForValue.build());
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder addAllService(
        Iterable<? extends ServiceResponse> values) {
      copyOnWrite();
      instance.addAllService(values);
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder clearService() {
      copyOnWrite();
      instance.clearService();
      return this;
    }

    /**
     * <pre>
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     * </pre>
     *
     * <code>repeated .grpc.reflection.v1alpha.ServiceResponse service = 1 [json_name =
     * "service"];</code>
     */
    public Builder removeService(int index) {
      copyOnWrite();
      instance.removeService(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.reflection.v1alpha.ListServiceResponse)
  }

  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new ListServiceResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
        Object[] objects = new Object[]{
            "service_",
            ServiceResponse.class,
        };
        String info =
            "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
        return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<ListServiceResponse> parser = PARSER;
        if (parser == null) {
          synchronized (ListServiceResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<ListServiceResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.ListServiceResponse)
  private static final ListServiceResponse DEFAULT_INSTANCE;

  static {
    ListServiceResponse defaultInstance = new ListServiceResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListServiceResponse.class, defaultInstance);
  }

  public static ListServiceResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ListServiceResponse> PARSER;

  public static com.google.protobuf.Parser<ListServiceResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

