// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/reflection/v1alpha/reflection.proto

// Protobuf Java Version: 3.25.2
package com.viam.sdk.core.rpc.reflectionv1alpha;

/**
 * <pre>
 * The message sent by the client when calling ServerReflectionInfo method.
 * </pre>
 * <p>
 * Protobuf type {@code grpc.reflection.v1alpha.ServerReflectionRequest}
 */
public final class ServerReflectionRequest extends
    com.google.protobuf.GeneratedMessageLite<
        ServerReflectionRequest, ServerReflectionRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:grpc.reflection.v1alpha.ServerReflectionRequest)
    ServerReflectionRequestOrBuilder {

  private ServerReflectionRequest() {
    host_ = "";
  }

  private int messageRequestCase_ = 0;
  private Object messageRequest_;

  public enum MessageRequestCase {
    FILE_BY_FILENAME(3),
    FILE_CONTAINING_SYMBOL(4),
    FILE_CONTAINING_EXTENSION(5),
    ALL_EXTENSION_NUMBERS_OF_TYPE(6),
    LIST_SERVICES(7),
    MESSAGEREQUEST_NOT_SET(0);
    private final int value;

    MessageRequestCase(int value) {
      this.value = value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MessageRequestCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageRequestCase forNumber(int value) {
      switch (value) {
        case 3:
          return FILE_BY_FILENAME;
        case 4:
          return FILE_CONTAINING_SYMBOL;
        case 5:
          return FILE_CONTAINING_EXTENSION;
        case 6:
          return ALL_EXTENSION_NUMBERS_OF_TYPE;
        case 7:
          return LIST_SERVICES;
        case 0:
          return MESSAGEREQUEST_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  }

  @Override
  public MessageRequestCase
  getMessageRequestCase() {
    return MessageRequestCase.forNumber(
        messageRequestCase_);
  }

  private void clearMessageRequest() {
    messageRequestCase_ = 0;
    messageRequest_ = null;
  }

  public static final int HOST_FIELD_NUMBER = 1;
  private String host_;

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   *
   * @return The host.
   */
  @Override
  public String getHost() {
    return host_;
  }

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   *
   * @return The bytes for host.
   */
  @Override
  public com.google.protobuf.ByteString
  getHostBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(host_);
  }

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   *
   * @param value The host to set.
   */
  private void setHost(
      String value) {
    Class<?> valueClass = value.getClass();

    host_ = value;
  }

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   */
  private void clearHost() {

    host_ = getDefaultInstance().getHost();
  }

  /**
   * <code>string host = 1 [json_name = "host"];</code>
   *
   * @param value The bytes for host to set.
   */
  private void setHostBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    host_ = value.toStringUtf8();

  }

  public static final int FILE_BY_FILENAME_FIELD_NUMBER = 3;

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   *
   * @return Whether the fileByFilename field is set.
   */
  @Override
  public boolean hasFileByFilename() {
    return messageRequestCase_ == 3;
  }

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   *
   * @return The fileByFilename.
   */
  @Override
  public String getFileByFilename() {
    String ref = "";
    if (messageRequestCase_ == 3) {
      ref = (String) messageRequest_;
    }
    return ref;
  }

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   *
   * @return The bytes for fileByFilename.
   */
  @Override
  public com.google.protobuf.ByteString
  getFileByFilenameBytes() {
    String ref = "";
    if (messageRequestCase_ == 3) {
      ref = (String) messageRequest_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   *
   * @param value The fileByFilename to set.
   */
  private void setFileByFilename(
      String value) {
    Class<?> valueClass = value.getClass();
    messageRequestCase_ = 3;
    messageRequest_ = value;
  }

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   */
  private void clearFileByFilename() {
    if (messageRequestCase_ == 3) {
      messageRequestCase_ = 0;
      messageRequest_ = null;
    }
  }

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
   *
   * @param value The bytes for fileByFilename to set.
   */
  private void setFileByFilenameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    messageRequest_ = value.toStringUtf8();
    messageRequestCase_ = 3;
  }

  public static final int FILE_CONTAINING_SYMBOL_FIELD_NUMBER = 4;

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   *
   * @return Whether the fileContainingSymbol field is set.
   */
  @Override
  public boolean hasFileContainingSymbol() {
    return messageRequestCase_ == 4;
  }

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   *
   * @return The fileContainingSymbol.
   */
  @Override
  public String getFileContainingSymbol() {
    String ref = "";
    if (messageRequestCase_ == 4) {
      ref = (String) messageRequest_;
    }
    return ref;
  }

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   *
   * @return The bytes for fileContainingSymbol.
   */
  @Override
  public com.google.protobuf.ByteString
  getFileContainingSymbolBytes() {
    String ref = "";
    if (messageRequestCase_ == 4) {
      ref = (String) messageRequest_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   *
   * @param value The fileContainingSymbol to set.
   */
  private void setFileContainingSymbol(
      String value) {
    Class<?> valueClass = value.getClass();
    messageRequestCase_ = 4;
    messageRequest_ = value;
  }

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   */
  private void clearFileContainingSymbol() {
    if (messageRequestCase_ == 4) {
      messageRequestCase_ = 0;
      messageRequest_ = null;
    }
  }

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
   *
   * @param value The bytes for fileContainingSymbol to set.
   */
  private void setFileContainingSymbolBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    messageRequest_ = value.toStringUtf8();
    messageRequestCase_ = 4;
  }

  public static final int FILE_CONTAINING_EXTENSION_FIELD_NUMBER = 5;

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
   * "fileContainingExtension"];</code>
   */
  @Override
  public boolean hasFileContainingExtension() {
    return messageRequestCase_ == 5;
  }

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
   * "fileContainingExtension"];</code>
   */
  @Override
  public ExtensionRequest getFileContainingExtension() {
    if (messageRequestCase_ == 5) {
      return (ExtensionRequest) messageRequest_;
    }
    return ExtensionRequest.getDefaultInstance();
  }

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
   * "fileContainingExtension"];</code>
   */
  private void setFileContainingExtension(ExtensionRequest value) {
    value.getClass();
    messageRequest_ = value;
    messageRequestCase_ = 5;
  }

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
   * "fileContainingExtension"];</code>
   */
  private void mergeFileContainingExtension(ExtensionRequest value) {
    value.getClass();
    if (messageRequestCase_ == 5 &&
        messageRequest_ != ExtensionRequest.getDefaultInstance()) {
      messageRequest_ = ExtensionRequest.newBuilder((ExtensionRequest) messageRequest_)
          .mergeFrom(value).buildPartial();
    } else {
      messageRequest_ = value;
    }
    messageRequestCase_ = 5;
  }

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
   * "fileContainingExtension"];</code>
   */
  private void clearFileContainingExtension() {
    if (messageRequestCase_ == 5) {
      messageRequestCase_ = 0;
      messageRequest_ = null;
    }
  }

  public static final int ALL_EXTENSION_NUMBERS_OF_TYPE_FIELD_NUMBER = 6;

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   *
   * @return Whether the allExtensionNumbersOfType field is set.
   */
  @Override
  public boolean hasAllExtensionNumbersOfType() {
    return messageRequestCase_ == 6;
  }

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   *
   * @return The allExtensionNumbersOfType.
   */
  @Override
  public String getAllExtensionNumbersOfType() {
    String ref = "";
    if (messageRequestCase_ == 6) {
      ref = (String) messageRequest_;
    }
    return ref;
  }

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   *
   * @return The bytes for allExtensionNumbersOfType.
   */
  @Override
  public com.google.protobuf.ByteString
  getAllExtensionNumbersOfTypeBytes() {
    String ref = "";
    if (messageRequestCase_ == 6) {
      ref = (String) messageRequest_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   *
   * @param value The allExtensionNumbersOfType to set.
   */
  private void setAllExtensionNumbersOfType(
      String value) {
    Class<?> valueClass = value.getClass();
    messageRequestCase_ = 6;
    messageRequest_ = value;
  }

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   */
  private void clearAllExtensionNumbersOfType() {
    if (messageRequestCase_ == 6) {
      messageRequestCase_ = 0;
      messageRequest_ = null;
    }
  }

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6 [json_name =
   * "allExtensionNumbersOfType"];</code>
   *
   * @param value The bytes for allExtensionNumbersOfType to set.
   */
  private void setAllExtensionNumbersOfTypeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    messageRequest_ = value.toStringUtf8();
    messageRequestCase_ = 6;
  }

  public static final int LIST_SERVICES_FIELD_NUMBER = 7;

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   *
   * @return Whether the listServices field is set.
   */
  @Override
  public boolean hasListServices() {
    return messageRequestCase_ == 7;
  }

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   *
   * @return The listServices.
   */
  @Override
  public String getListServices() {
    String ref = "";
    if (messageRequestCase_ == 7) {
      ref = (String) messageRequest_;
    }
    return ref;
  }

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   *
   * @return The bytes for listServices.
   */
  @Override
  public com.google.protobuf.ByteString
  getListServicesBytes() {
    String ref = "";
    if (messageRequestCase_ == 7) {
      ref = (String) messageRequest_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   *
   * @param value The listServices to set.
   */
  private void setListServices(
      String value) {
    Class<?> valueClass = value.getClass();
    messageRequestCase_ = 7;
    messageRequest_ = value;
  }

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   */
  private void clearListServices() {
    if (messageRequestCase_ == 7) {
      messageRequestCase_ = 0;
      messageRequest_ = null;
    }
  }

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7 [json_name = "listServices"];</code>
   *
   * @param value The bytes for listServices to set.
   */
  private void setListServicesBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    messageRequest_ = value.toStringUtf8();
    messageRequestCase_ = 7;
  }

  public static ServerReflectionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ServerReflectionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ServerReflectionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ServerReflectionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ServerReflectionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }

  public static ServerReflectionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static ServerReflectionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }

  public static ServerReflectionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static ServerReflectionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static ServerReflectionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static ServerReflectionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }

  public static ServerReflectionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(ServerReflectionRequest prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The message sent by the client when calling ServerReflectionInfo method.
   * </pre>
   * <p>
   * Protobuf type {@code grpc.reflection.v1alpha.ServerReflectionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
          ServerReflectionRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.reflection.v1alpha.ServerReflectionRequest)
      ServerReflectionRequestOrBuilder {

    // Construct using io.grpc.reflection.v1alpha.ServerReflectionRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @Override
    public MessageRequestCase
    getMessageRequestCase() {
      return instance.getMessageRequestCase();
    }

    public Builder clearMessageRequest() {
      copyOnWrite();
      instance.clearMessageRequest();
      return this;
    }


    /**
     * <code>string host = 1 [json_name = "host"];</code>
     *
     * @return The host.
     */
    @Override
    public String getHost() {
      return instance.getHost();
    }

    /**
     * <code>string host = 1 [json_name = "host"];</code>
     *
     * @return The bytes for host.
     */
    @Override
    public com.google.protobuf.ByteString
    getHostBytes() {
      return instance.getHostBytes();
    }

    /**
     * <code>string host = 1 [json_name = "host"];</code>
     *
     * @param value The host to set.
     * @return This builder for chaining.
     */
    public Builder setHost(
        String value) {
      copyOnWrite();
      instance.setHost(value);
      return this;
    }

    /**
     * <code>string host = 1 [json_name = "host"];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHost() {
      copyOnWrite();
      instance.clearHost();
      return this;
    }

    /**
     * <code>string host = 1 [json_name = "host"];</code>
     *
     * @param value The bytes for host to set.
     * @return This builder for chaining.
     */
    public Builder setHostBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setHostBytes(value);
      return this;
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @return Whether the fileByFilename field is set.
     */
    @Override
    public boolean hasFileByFilename() {
      return instance.hasFileByFilename();
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @return The fileByFilename.
     */
    @Override
    public String getFileByFilename() {
      return instance.getFileByFilename();
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @return The bytes for fileByFilename.
     */
    @Override
    public com.google.protobuf.ByteString
    getFileByFilenameBytes() {
      return instance.getFileByFilenameBytes();
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @param value The fileByFilename to set.
     * @return This builder for chaining.
     */
    public Builder setFileByFilename(
        String value) {
      copyOnWrite();
      instance.setFileByFilename(value);
      return this;
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFileByFilename() {
      copyOnWrite();
      instance.clearFileByFilename();
      return this;
    }

    /**
     * <pre>
     * Find a proto file by the file name.
     * </pre>
     *
     * <code>string file_by_filename = 3 [json_name = "fileByFilename"];</code>
     *
     * @param value The bytes for fileByFilename to set.
     * @return This builder for chaining.
     */
    public Builder setFileByFilenameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFileByFilenameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @return Whether the fileContainingSymbol field is set.
     */
    @Override
    public boolean hasFileContainingSymbol() {
      return instance.hasFileContainingSymbol();
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @return The fileContainingSymbol.
     */
    @Override
    public String getFileContainingSymbol() {
      return instance.getFileContainingSymbol();
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @return The bytes for fileContainingSymbol.
     */
    @Override
    public com.google.protobuf.ByteString
    getFileContainingSymbolBytes() {
      return instance.getFileContainingSymbolBytes();
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @param value The fileContainingSymbol to set.
     * @return This builder for chaining.
     */
    public Builder setFileContainingSymbol(
        String value) {
      copyOnWrite();
      instance.setFileContainingSymbol(value);
      return this;
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFileContainingSymbol() {
      copyOnWrite();
      instance.clearFileContainingSymbol();
      return this;
    }

    /**
     * <pre>
     * Find the proto file that declares the given fully-qualified symbol name.
     * This field should be a fully-qualified symbol name
     * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
     * </pre>
     *
     * <code>string file_containing_symbol = 4 [json_name = "fileContainingSymbol"];</code>
     *
     * @param value The bytes for fileContainingSymbol to set.
     * @return This builder for chaining.
     */
    public Builder setFileContainingSymbolBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFileContainingSymbolBytes(value);
      return this;
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    @Override
    public boolean hasFileContainingExtension() {
      return instance.hasFileContainingExtension();
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    @Override
    public ExtensionRequest getFileContainingExtension() {
      return instance.getFileContainingExtension();
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    public Builder setFileContainingExtension(ExtensionRequest value) {
      copyOnWrite();
      instance.setFileContainingExtension(value);
      return this;
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    public Builder setFileContainingExtension(
        ExtensionRequest.Builder builderForValue) {
      copyOnWrite();
      instance.setFileContainingExtension(builderForValue.build());
      return this;
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    public Builder mergeFileContainingExtension(ExtensionRequest value) {
      copyOnWrite();
      instance.mergeFileContainingExtension(value);
      return this;
    }

    /**
     * <pre>
     * Find the proto file which defines an extension extending the given
     * message type with the given field number.
     * </pre>
     *
     * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5 [json_name =
     * "fileContainingExtension"];</code>
     */
    public Builder clearFileContainingExtension() {
      copyOnWrite();
      instance.clearFileContainingExtension();
      return this;
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @return Whether the allExtensionNumbersOfType field is set.
     */
    @Override
    public boolean hasAllExtensionNumbersOfType() {
      return instance.hasAllExtensionNumbersOfType();
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @return The allExtensionNumbersOfType.
     */
    @Override
    public String getAllExtensionNumbersOfType() {
      return instance.getAllExtensionNumbersOfType();
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @return The bytes for allExtensionNumbersOfType.
     */
    @Override
    public com.google.protobuf.ByteString
    getAllExtensionNumbersOfTypeBytes() {
      return instance.getAllExtensionNumbersOfTypeBytes();
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @param value The allExtensionNumbersOfType to set.
     * @return This builder for chaining.
     */
    public Builder setAllExtensionNumbersOfType(
        String value) {
      copyOnWrite();
      instance.setAllExtensionNumbersOfType(value);
      return this;
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAllExtensionNumbersOfType() {
      copyOnWrite();
      instance.clearAllExtensionNumbersOfType();
      return this;
    }

    /**
     * <pre>
     * Finds the tag numbers used by all known extensions of extendee_type, and
     * appends them to ExtensionNumberResponse in an undefined order.
     * Its corresponding method is best-effort: it's not guaranteed that the
     * reflection service will implement this method, and it's not guaranteed
     * that this method will provide all extensions. Returns
     * StatusCode::UNIMPLEMENTED if it's not implemented.
     * This field should be a fully-qualified type name. The format is
     * &lt;package&gt;.&lt;type&gt;
     * </pre>
     *
     * <code>string all_extension_numbers_of_type = 6 [json_name =
     * "allExtensionNumbersOfType"];</code>
     *
     * @param value The bytes for allExtensionNumbersOfType to set.
     * @return This builder for chaining.
     */
    public Builder setAllExtensionNumbersOfTypeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setAllExtensionNumbersOfTypeBytes(value);
      return this;
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @return Whether the listServices field is set.
     */
    @Override
    public boolean hasListServices() {
      return instance.hasListServices();
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @return The listServices.
     */
    @Override
    public String getListServices() {
      return instance.getListServices();
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @return The bytes for listServices.
     */
    @Override
    public com.google.protobuf.ByteString
    getListServicesBytes() {
      return instance.getListServicesBytes();
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @param value The listServices to set.
     * @return This builder for chaining.
     */
    public Builder setListServices(
        String value) {
      copyOnWrite();
      instance.setListServices(value);
      return this;
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearListServices() {
      copyOnWrite();
      instance.clearListServices();
      return this;
    }

    /**
     * <pre>
     * List the full names of registered services. The content will not be
     * checked.
     * </pre>
     *
     * <code>string list_services = 7 [json_name = "listServices"];</code>
     *
     * @param value The bytes for listServices to set.
     * @return This builder for chaining.
     */
    public Builder setListServicesBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setListServicesBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:grpc.reflection.v1alpha.ServerReflectionRequest)
  }

  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new ServerReflectionRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
        Object[] objects = new Object[]{
            "messageRequest_",
            "messageRequestCase_",
            "host_",
            ExtensionRequest.class,
        };
        String info =
            "\u0000\u0006\u0001\u0000\u0001\u0007\u0006\u0000\u0000\u0000\u0001\u0208\u0003\u023b" +
                "\u0000\u0004\u023b\u0000\u0005<\u0000\u0006\u023b\u0000\u0007\u023b\u0000";
        return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<ServerReflectionRequest> parser = PARSER;
        if (parser == null) {
          synchronized (ServerReflectionRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<ServerReflectionRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.ServerReflectionRequest)
  private static final ServerReflectionRequest DEFAULT_INSTANCE;

  static {
    ServerReflectionRequest defaultInstance = new ServerReflectionRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ServerReflectionRequest.class, defaultInstance);
  }

  public static ServerReflectionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ServerReflectionRequest> PARSER;

  public static com.google.protobuf.Parser<ServerReflectionRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

